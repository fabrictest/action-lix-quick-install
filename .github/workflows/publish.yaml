---
name: Publish
on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
    secrets:
      CICD_APP_ID:
        required: true
      CICD_PRIVATE_KEY:
        required: true
jobs:
  runner-matrix:
    name: For which runners?
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.runner-matrix.outputs.json }}
    steps:
      - name: Download lix-versions files from GitHub
        id: lix-versions
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: lix-versions-*
          merge-multiple: true
      - name: Generate matrix
        id: runner-matrix
        shell: bash
        env:
          download_path: ${{ steps.lix-versions.outputs.download-path }}
        run: |
          cat >>"$GITHUB_OUTPUT" <<EOF
          json=$(
              cat "$download_path"/*.jsonl |
                  jq --raw-output '."runs-on"' |
                  sort |
                  uniq |
                  jq --compact-output --null-input --raw-input '{"runner": [inputs]}'
          )
          EOF
  for-each-runner:
    needs:
      - runner-matrix
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.runner-matrix.outputs.json) }}
    name: For ${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}
    permissions:
      attestations: write
      id-token: write
    steps:
      - name: Generate app token
        id: app-token
        uses: actions/create-github-app-token@c1a285145b9d317df6ced56c09f525b5c2b6f755 # v1.11.1
        with:
          app-id: ${{ secrets.CICD_APP_ID }}
          private-key: ${{ secrets.CICD_PRIVATE_KEY }}
      - name: Check out repository
        id: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
      - name: Download `/nix` tarballs
        id: tarballs
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: lix-tarballs-${{ runner.os }}-${{ runner.arch }}
      - name: Attest action and `/nix` tarballs
        uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2.1.0
        with:
          subject-path: |
            ${{ steps.tarballs.outputs.download-path }}/lix-*.tar.*
            action.yaml
      - name: Attach `/nix` tarballs to the GitHub release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          tag: ${{ inputs.tag }}
          download_path: ${{ steps.tarballs.outputs.download-path }}
        run: |
          gh release upload "$tag" "$download_path"/lix-*.tar.*
      - name: Fetch app UID
        id: app-uid
        if: ${{ !contains(inputs.tag, '-') }}
        shell: bash
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          app_name: ${{ steps.app-token.outputs.app-slug }}[bot]
        run: |
          cat >>"$GITHUB_OUTPUT" <<EOF
          string=$(gh api "/users/$app_name" --jq .id)
          EOF
      - name: Tag major and minor versions
        # NOTE(ttlgcc): Only final releases get to bump major and minor tags.
        if: ${{ !contains(inputs.tag, '-') }}
        shell: bash
        env:
          GIT_AUTHOR_NAME: ${{ steps.app-token.outputs.app-slug }}[bot]
          GIT_AUTHOR_EMAIL: ${{ steps.app-uid.outputs.string }}+${{ steps.app-token.outputs.app-slug }}[bot]@noreply.users.github.com
          GIT_COMMITTER_NAME: ${{ steps.app-token.outputs.app-slug }}[bot]
          GIT_COMMITTER_EMAIL: ${{ steps.app-uid.outputs.string }}+${{ steps.app-token.outputs.app-slug }}[bot]@noreply.users.github.com
          tag: ${{ inputs.tag }}
        run: |
          git tag --force --annotate "${tag%.*}" --message "Release ${tag%.*} → $tag"
          git tag --force --annotate "${tag%%.*}" --message "Release ${tag%%.*} → $tag"
          git push --force --tags
      - name: Mark release PR as published
        shell: bash
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          head_sha: ${{ steps.checkout.outputs.commit }}
        run: |
          gh pr list --search "$head_sha"' is:merged label:"autorelease: tagged" sort:created-desc' --limit 1 --json number --jq '.[0].number' |
              xargs -I {} -- gh pr edit {} --add-label 'autorelease: published' --remove-label 'autorelease: tagged'
  attest:
    runs-on: ubuntu-latest
    name: Attestations
    permissions:
      attestations: write
      id-token: write
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Download `/nix` tarballs
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: .
          pattern: lix-tarballs-*
          merge-multiple: true
      - name: Attest action and `/nix` tarballs
        uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2.1.0
        with:
          subject-path: action.yaml, lix-*.tar.*
