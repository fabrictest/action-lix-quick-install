name: CICD
on:
  pull_request:
  push:
    branches:
      - master
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    name: Build
    strategy:
      fail-fast: true
      matrix:
        os: 
          - ubuntu-latest
          - macos-13 # X64
          - macos-latest # ARM64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Bootstrap Lix
        uses: ./
        with:
          # TODO(ttlgcc): Parameterize flake version.
          lix-archives-url: https://github.com/fabrictest/lix-quick-install-action/releases/download/v6
      - name: Set up Cachix
        uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          name: ${{ vars.CACHIX_CACHE_NAME }}
          authToken: ${{ secrets.CACHIX_TOKEN }}
      - name: Build archives
        id: archives
        shell: bash
        run: |
          nix build .#lix-archives
          cat >>"$GITHUB_OUTPUT" <<EOF
          result=$(readlink result)
          EOF
      - name: Upload archives
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: archives-${{ runner.os }}-${{ runner.arch }}
          path: ${{ steps.archives.outputs.result }}/
  test:
    name: Test
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - macos-13 # X64
          - macos-latest # ARM64
        lix-version:
          - 2.90.0
          - 2.91.1
    needs:
      - build
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Download archives
        id: archives
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: archives-${{ runner.os }}-${{ runner.arch }}
      - name: Install Lix ${{ matrix.lix-version }}
        uses: ./
        with:
          lix-version: ${{ matrix.lix-version }}
          lix-on-tmpfs: true
          lix-archives-url: file://${{ steps.archives.outputs.download-path }}
      - name: Set up Cachix
        uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          name: ${{ vars.CACHIX_CACHE_NAME }}
          authToken: ${{ secrets.CACHIX_TOKEN }}
          skipPush: true
      - name: Verify that Lix was installed
        shell: bash
        run: |
          nix-build -v --version
      - name: Verify that one can add a file to the Lix store
        id: lix-store-add
        shell: bash
        run: |
          f=./$RANDOM
          echo $RANDOM >$f
          cat >>"$GITHUB_OUTPUT" <<EOF
          result=$(nix-store --add $f)
          EOF
      - name: Verify that one can push such file to Cachix
        if: ${{ github.event_name == 'push' && github.repository_owner == 'fabrictest' }}
        shell: bash
        run: |
          cachix push "$CACHIX_CACHE_NAME" "$result"
        env:
          CACHIX_CACHE_NAME: ${{ vars.CACHIX_CACHE_NAME }}
          result: ${{ steps.lix-store-add.outputs.result }}
  release:
    name: Release
    outputs:
      created: ${{ steps.release.outputs.release_created || '' }}
      tag: ${{ steps.release.outputs.tag_name }}
    needs:
      - test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref_name == github.event.repository.default_branch }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Cut a release
        id: release
        uses: googleapis/release-please-action@v4.1.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple
          target-branch: ${{ github.ref_name }}
      - name: Check out repository
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Tag major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        shell: bash
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config url."https://$GITHUB_TOKEN:x-oauth-basic@github.com/".insteadOf 'https://github.com/'
          for tag in "$major" "$minor"; do
            git tag -d "$tag" || :
            git push origin :"$tag" || :
            git tag -a "$tag" -m "Release $tag"
            git push origin "$tag"
          done
        env:
          GITHUB_TOKEN: ${{ github.token }}
          major: v${{ steps.release.outputs.major }}
          minor: v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
  publish:
    name: Publish
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - macos-13
          - macos-latest
    runs-on: ${{ matrix.os }}
    needs:
      - release
    if: ${{ needs.release.outputs.created }}
    permissions:
      contents: write
    steps:
      - name: Download archives
        id: archives
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: archives-${{ runner.os }}-${{ runner.arch }}
      - name: Attach archives to the GitHub release
        shell: bash
        run: |
          gh release upload "$tag" "$archives"/lix-*.tar.zstd
        env:
          GITHUB_TOKEN: ${{ github.token }}
          tag: ${{ needs.release.outputs.tag }}
          archives: ${{ steps.archives.outputs.download-path }}
